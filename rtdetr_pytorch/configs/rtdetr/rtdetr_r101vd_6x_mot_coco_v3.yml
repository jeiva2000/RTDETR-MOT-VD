__include__: [
  '../dataset/coco_mot_detection.yml',
  '../runtime.yml',
  './include/dataloader_mot.yml',
  './include/optimizer.yml',
  './include/rtdetr_r50vd.yml',
]

num_classes: 2

model: RTDETR_MOT
criterion: SetCriterion
postprocessor: RTDETRPostProcessor

RTDETR_MOT:
  backbone: PResNet
  encoder: HybridEncoder
  decoder: RTDETRTransformerMOT_v2
  multi_scale: [480, 512, 544, 576, 608, 640, 640, 640, 672, 704, 736, 768, 800]
  criterion: CriterionMOT_v2

PResNet:
  depth: 101


HybridEncoder:
  # intra
  hidden_dim: 384
  dim_feedforward: 2048


RTDETRTransformerMOT_v2:
  feat_channels: [384, 384, 384]
  #num_denoising: 0
  # deshabilitando denoising

CriterionMOT_v2:
  weight_dict: {loss_vfl: 1, loss_bbox: 5, loss_giou: 2,}
  losses: ['vfl', 'boxes', ]
  alpha: 0.75
  gamma: 2.0

  matcher:
    type: HungarianMatcher
    weight_dict: {cost_class: 2, cost_bbox: 5, cost_giou: 2}
    use_focal_loss: True
    alpha: 0.25
    gamma: 2.0

optimizer:
  type: AdamW
  params: 
    - 
      params: 'backbone'
      lr: 0.000001 
      #plantear cambiar el lr a uno mas alto '' cuidado con esto ya que el finetuning utiliza lr bajos

#output_dir: 'rtdetr_101vd_6x_mot_track_v3_prueba_v4_prueba_self_attn'
#output_dir: 'rtdetr_101vd_6x_mot_track_seg_2'
#output_dir: 'prueba_v8'
#output_dir: 'prueba_v4_plus_a_1'
#output_dir: 'prueba_v4_plus_b'
#output_dir: 'prueba_v4_plus_c'
#output_dir: 'prueba_v4_plus_d'
#output_dir: 'prueba_v4_plus_a_qim'
#output_dir: 'prueba_v4_plus_d_qim'
#output_dir: 'prueba_v4_qim'
#output_dir: 'prueba_v4_plus_d_qim_2'
#output_dir: 'prueba_only_dets'
#output_dir: 'prueba_v4_plus_b_qim_2_r'
output_dir: 'prueba_simplicada'
#output_dir: "dancetrack"
epoches: 30 #15

mode_train: 'mot'
